name: build

# Build and test dbn

on: push

jobs:
  x86_64-build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    name: build - Python ${{ matrix.python-version }} (x86_64 ${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Cargo setup
      - name: Set up Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

      # Python setup
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}

      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --manifest-path python/Cargo.toml --interpreter python${{ matrix.python-version }}

      - name: Format
        run: scripts/format.sh
      - name: Build
        run: scripts/build.sh
      - name: Lint
        run: scripts/lint.sh
      - name: Test
        run: scripts/test.sh

  aarch64-build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    name: build - Python ${{ matrix.python-version }} (aarch64 linux)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Cargo setup
      - name: Set up Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

      # Python setup
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: aarch64
          manylinux: auto
          args: --release --out dist --manifest-path python/Cargo.toml --interpreter python${{ matrix.python-version }}

      - name: Format
        run: scripts/format.sh
      - name: Build
        run: scripts/build.sh
      - name: Lint
        run: scripts/lint.sh
      - name: Test
        run: scripts/test.sh

  macos-build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    name: build - Python ${{ matrix.python-version }} (macOS)
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Cargo setup
      - name: Set up Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

      # Python setup
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --manifest-path python/Cargo.toml --interpreter python${{ matrix.python-version }}

      - name: Build wheels - universal2
        uses: messense/maturin-action@v1
        with:
          args: --release --target universal2-apple-darwin --out dist --manifest-path python/Cargo.toml --interpreter python${{ matrix.python-version }}

      - name: Format
        run: scripts/format.sh
      - name: Build
        run: scripts/build.sh
      - name: Lint
        run: scripts/lint.sh
      - name: Test
        run: scripts/test.sh
